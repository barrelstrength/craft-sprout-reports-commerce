<?php

namespace Craft;

class CommerceReportsProductRevenueDataSource extends SproutReportsBaseDataSource
{
	public function getName()
	{
		return Craft::t('Commerce Product Revenue.');
	}

	public function getDescription()
	{
		return Craft::t('Displays a list of products and the total revenue earned');
	}

	/**
	 * @param array $options
	 *
	 * @return string
	 */
	public function getOptionsHtml(array $options = array())
	{
		return craft()->templates->render('commercereports/datasources/_options/productrevenue');
	}

	public function validateOptions(array $options = array(), array $errors = array())
	{
		return parent::validateOptions($options, $errors); // TODO: Change the autogenerated stub
	}

	public function getResults(SproutReports_ReportModel &$report, $options = array())
	{
		$criteria = $criteria = craft()->elements->getCriteria('Commerce_Order');
		$criteria->limit = null;

		// Don't use the search
		$criteria->search = null;

		$query = craft()->elements->buildElementsQuery($criteria)
			->select('orders.id, products.id as ProductID, products.defaultSku, lineitems.purchasableId, sum(lineitems.total) as total')
			->join('commerce_lineitems as lineitems', 'orders.id = lineitems.orderId')
			->join('commerce_variants as variants', 'lineitems.purchasableId = variants.id')
			->join('commerce_products as products', 'variants.productId = products.id');

		//	$query->group('lineitems.purchasableId');
			$query->group('products.id');
			$query->order('products.id DESC');

		$results = $query->queryAll();

		return $results;
	}
}